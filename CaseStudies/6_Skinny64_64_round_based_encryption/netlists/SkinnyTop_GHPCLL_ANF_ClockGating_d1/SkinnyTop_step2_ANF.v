// assign in = { in_signal[943], in_signal[940], in_signal[939], in_signal[199], in_signal[198], in_signal[197], in_signal[196], in_signal[195], in_signal[194], in_signal[193], in_signal[192], in_signal[191], in_signal[190], in_signal[189], in_signal[188], in_signal[187], in_signal[186], in_signal[185], in_signal[184], in_signal[183], in_signal[182], in_signal[181], in_signal[180], in_signal[179], in_signal[178], in_signal[177], in_signal[176], in_signal[175], in_signal[174], in_signal[173], in_signal[172], in_signal[171], in_signal[170], in_signal[169], in_signal[168], in_signal[167], in_signal[166], in_signal[165], in_signal[164], in_signal[163], in_signal[162], in_signal[161], in_signal[160], in_signal[159], in_signal[158], in_signal[157], in_signal[156], in_signal[155], in_signal[154], in_signal[153], in_signal[152], in_signal[151], in_signal[150], in_signal[149], in_signal[148], in_signal[147], in_signal[146], in_signal[145], in_signal[144], in_signal[143], in_signal[142], in_signal[141], in_signal[140], in_signal[139], in_signal[138], in_signal[137], in_signal[136], in_signal[1163], in_signal[1162], in_signal[1161], in_signal[1160], in_signal[1159], in_signal[1158], in_signal[1157], in_signal[1156], in_signal[1155], in_signal[1154], in_signal[1153], in_signal[1152], in_signal[1151], in_signal[1150], in_signal[1149], in_signal[1148], in_signal[1147], in_signal[1146], in_signal[1145], in_signal[1144], in_signal[1143], in_signal[1142], in_signal[1141], in_signal[1140], in_signal[1139], in_signal[1138], in_signal[1137], in_signal[1136], in_signal[1135], in_signal[1134], in_signal[1133], in_signal[1132], in_signal[1028], in_signal[1026], in_signal[1025], in_signal[0] };
// assign  { out_signal[839], out_signal[838], out_signal[837], out_signal[836], out_signal[835], out_signal[834], out_signal[833], out_signal[832], out_signal[831], out_signal[830], out_signal[829], out_signal[828], out_signal[827], out_signal[826], out_signal[825], out_signal[824], out_signal[823], out_signal[822], out_signal[821], out_signal[820], out_signal[819], out_signal[818], out_signal[817], out_signal[816], out_signal[815], out_signal[814], out_signal[813], out_signal[812], out_signal[811], out_signal[810], out_signal[809], out_signal[808], out_signal[807], out_signal[806], out_signal[805], out_signal[804], out_signal[803], out_signal[802], out_signal[801], out_signal[800], out_signal[799], out_signal[798], out_signal[797], out_signal[796], out_signal[795], out_signal[794], out_signal[793], out_signal[792], out_signal[791], out_signal[790], out_signal[789], out_signal[788], out_signal[787], out_signal[786], out_signal[785], out_signal[784], out_signal[783], out_signal[782], out_signal[781], out_signal[780], out_signal[779], out_signal[778], out_signal[777], out_signal[776] } = out;
module SkinnyTop_step2_ANF #(low_latency = 1, pipeline = 0) (clk, r, in0, in1, out0, out1);
  input clk;
  input [102:0] in0, in1;
  output [63:0] out0, out1;
  input [1023:0] r;


  wire [3:0] g0_0, g0_1;
  GHPC_Gadget_0 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_0_inst(.in0({in0[51],in0[50],in0[49],in0[48]}), .in1({in1[51],in1[50],in1[49],in1[48]}), .r(r[63:0]), .clk(clk), .out0(g0_0), .out1(g0_1));
  wire [3:0] s0_0, s0_1;
  assign s0_0[0] = g0_0[2] ^ g0_0[3];
  assign s0_1[0] = g0_1[2] ^ g0_1[3];
  assign s0_0[1] = g0_0[0] ^ g0_0[2] ^ g0_0[3];
  assign s0_1[1] = g0_1[0] ^ g0_1[2] ^ g0_1[3];
  assign s0_0[2] = g0_0[2] ^ g0_0[1];
  assign s0_1[2] = g0_1[2] ^ g0_1[1];
  assign s0_0[3] = g0_0[3];
  assign s0_1[3] = g0_1[3];

  wire [3:0] g1_0, g1_1;
  GHPC_Gadget_1 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_1_inst(.in0({in0[47],in0[46],in0[45],in0[44]}), .in1({in1[47],in1[46],in1[45],in1[44]}), .r(r[127:64]), .clk(clk), .out0(g1_0), .out1(g1_1));
  wire [3:0] s1_0, s1_1;
  assign s1_0[0] = g1_0[2] ^ g1_0[3];
  assign s1_1[0] = g1_1[2] ^ g1_1[3];
  assign s1_0[1] = g1_0[0] ^ g1_0[2] ^ g1_0[3];
  assign s1_1[1] = g1_1[0] ^ g1_1[2] ^ g1_1[3];
  assign s1_0[2] = g1_0[2] ^ g1_0[1];
  assign s1_1[2] = g1_1[2] ^ g1_1[1];
  assign s1_0[3] = g1_0[3];
  assign s1_1[3] = g1_1[3];

  wire [3:0] g2_0, g2_1;
  GHPC_Gadget_2 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_2_inst(.in0({in0[43],in0[42],in0[41],in0[40]}), .in1({in1[43],in1[42],in1[41],in1[40]}), .r(r[191:128]), .clk(clk), .out0(g2_0), .out1(g2_1));
  wire [3:0] s2_0, s2_1;
  assign s2_0[0] = g2_0[2] ^ g2_0[3];
  assign s2_1[0] = g2_1[2] ^ g2_1[3];
  assign s2_0[1] = g2_0[0] ^ g2_0[2] ^ g2_0[3];
  assign s2_1[1] = g2_1[0] ^ g2_1[2] ^ g2_1[3];
  assign s2_0[2] = g2_0[2] ^ g2_0[1];
  assign s2_1[2] = g2_1[2] ^ g2_1[1];
  assign s2_0[3] = g2_0[3];
  assign s2_1[3] = g2_1[3];

  wire [3:0] g3_0, g3_1;
  GHPC_Gadget_3 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_3_inst(.in0({in0[75],in0[74],in0[73],in0[72]}), .in1({in1[75],in1[74],in1[73],in1[72]}), .r(r[255:192]), .clk(clk), .out0(g3_0), .out1(g3_1));
  wire [3:0] s3_0, s3_1;
  assign s3_0[0] = g3_0[2] ^ g3_0[3];
  assign s3_1[0] = g3_1[2] ^ g3_1[3];
  assign s3_0[1] = g3_0[0] ^ g3_0[2] ^ g3_0[3];
  assign s3_1[1] = g3_1[0] ^ g3_1[2] ^ g3_1[3];
  assign s3_0[2] = g3_0[2] ^ g3_0[1];
  assign s3_1[2] = g3_1[2] ^ g3_1[1];
  assign s3_0[3] = g3_0[3];
  assign s3_1[3] = g3_1[3];

  wire [3:0] g4_0, g4_1;
  GHPC_Gadget_4 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_4_inst(.in0({in0[71],in0[70],in0[69],in0[68]}), .in1({in1[71],in1[70],in1[69],in1[68]}), .r(r[319:256]), .clk(clk), .out0(g4_0), .out1(g4_1));
  wire [3:0] s4_0, s4_1;
  assign s4_0[0] = g4_0[2] ^ g4_0[3];
  assign s4_1[0] = g4_1[2] ^ g4_1[3];
  assign s4_0[1] = g4_0[0] ^ g4_0[2] ^ g4_0[3];
  assign s4_1[1] = g4_1[0] ^ g4_1[2] ^ g4_1[3];
  assign s4_0[2] = g4_0[2] ^ g4_0[1];
  assign s4_1[2] = g4_1[2] ^ g4_1[1];
  assign s4_0[3] = g4_0[3];
  assign s4_1[3] = g4_1[3];

  wire [3:0] g5_0, g5_1;
  GHPC_Gadget_5 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_5_inst(.in0({in0[83],in0[82],in0[81],in0[80]}), .in1({in1[83],in1[82],in1[81],in1[80]}), .r(r[383:320]), .clk(clk), .out0(g5_0), .out1(g5_1));
  wire [3:0] s5_0, s5_1;
  assign s5_0[0] = g5_0[2] ^ g5_0[3];
  assign s5_1[0] = g5_1[2] ^ g5_1[3];
  assign s5_0[1] = g5_0[0] ^ g5_0[2] ^ g5_0[3];
  assign s5_1[1] = g5_1[0] ^ g5_1[2] ^ g5_1[3];
  assign s5_0[2] = g5_0[2] ^ g5_0[1];
  assign s5_1[2] = g5_1[2] ^ g5_1[1];
  assign s5_0[3] = g5_0[3];
  assign s5_1[3] = g5_1[3];

  wire [3:0] g6_0, g6_1;
  GHPC_Gadget_6 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_6_inst(.in0({in0[63],in0[62],in0[61],in0[60]}), .in1({in1[63],in1[62],in1[61],in1[60]}), .r(r[447:384]), .clk(clk), .out0(g6_0), .out1(g6_1));
  wire [3:0] s6_0, s6_1;
  assign s6_0[0] = g6_0[2] ^ g6_0[3];
  assign s6_1[0] = g6_1[2] ^ g6_1[3];
  assign s6_0[1] = g6_0[0] ^ g6_0[2] ^ g6_0[3];
  assign s6_1[1] = g6_1[0] ^ g6_1[2] ^ g6_1[3];
  assign s6_0[2] = g6_0[2] ^ g6_0[1];
  assign s6_1[2] = g6_1[2] ^ g6_1[1];
  assign s6_0[3] = g6_0[3];
  assign s6_1[3] = g6_1[3];

  wire [3:0] g7_0, g7_1;
  GHPC_Gadget_7 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_7_inst(.in0({in0[59],in0[58],in0[57],in0[56]}), .in1({in1[59],in1[58],in1[57],in1[56]}), .r(r[511:448]), .clk(clk), .out0(g7_0), .out1(g7_1));
  wire [3:0] s7_0, s7_1;
  assign s7_0[0] = g7_0[2] ^ g7_0[3];
  assign s7_1[0] = g7_1[2] ^ g7_1[3];
  assign s7_0[1] = g7_0[0] ^ g7_0[2] ^ g7_0[3];
  assign s7_1[1] = g7_1[0] ^ g7_1[2] ^ g7_1[3];
  assign s7_0[2] = g7_0[2] ^ g7_0[1];
  assign s7_1[2] = g7_1[2] ^ g7_1[1];
  assign s7_0[3] = g7_0[3];
  assign s7_1[3] = g7_1[3];

  wire [3:0] g8_0, g8_1;
  GHPC_Gadget_8 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_8_inst(.in0({in0[79],in0[78],in0[77],in0[76]}), .in1({in1[79],in1[78],in1[77],in1[76]}), .r(r[575:512]), .clk(clk), .out0(g8_0), .out1(g8_1));
  wire [3:0] s8_0, s8_1;
  assign s8_0[0] = g8_0[2] ^ g8_0[3];
  assign s8_1[0] = g8_1[2] ^ g8_1[3];
  assign s8_0[1] = g8_0[0] ^ g8_0[2] ^ g8_0[3];
  assign s8_1[1] = g8_1[0] ^ g8_1[2] ^ g8_1[3];
  assign s8_0[2] = g8_0[2] ^ g8_0[1];
  assign s8_1[2] = g8_1[2] ^ g8_1[1];
  assign s8_0[3] = g8_0[3];
  assign s8_1[3] = g8_1[3];

  wire [3:0] g9_0, g9_1;
  GHPC_Gadget_9 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_9_inst(.in0({in0[67],in0[66],in0[65],in0[64]}), .in1({in1[67],in1[66],in1[65],in1[64]}), .r(r[639:576]), .clk(clk), .out0(g9_0), .out1(g9_1));
  wire [3:0] s9_0, s9_1;
  assign s9_0[0] = g9_0[2] ^ g9_0[3];
  assign s9_1[0] = g9_1[2] ^ g9_1[3];
  assign s9_0[1] = g9_0[0] ^ g9_0[2] ^ g9_0[3];
  assign s9_1[1] = g9_1[0] ^ g9_1[2] ^ g9_1[3];
  assign s9_0[2] = g9_0[2] ^ g9_0[1];
  assign s9_1[2] = g9_1[2] ^ g9_1[1];
  assign s9_0[3] = g9_0[3];
  assign s9_1[3] = g9_1[3];

  wire [3:0] g10_0, g10_1;
  GHPC_Gadget_10 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_10_inst(.in0({in0[39],in0[38],in0[37],in0[36]}), .in1({in1[39],in1[38],in1[37],in1[36]}), .r(r[703:640]), .clk(clk), .out0(g10_0), .out1(g10_1));
  wire [3:0] s10_0, s10_1;
  assign s10_0[0] = g10_0[2] ^ g10_0[3];
  assign s10_1[0] = g10_1[2] ^ g10_1[3];
  assign s10_0[1] = g10_0[0] ^ g10_0[2] ^ g10_0[3];
  assign s10_1[1] = g10_1[0] ^ g10_1[2] ^ g10_1[3];
  assign s10_0[2] = g10_0[2] ^ g10_0[1];
  assign s10_1[2] = g10_1[2] ^ g10_1[1];
  assign s10_0[3] = g10_0[3];
  assign s10_1[3] = g10_1[3];

  wire [3:0] g11_0, g11_1;
  GHPC_Gadget_11 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_11_inst(.in0({in0[87],in0[86],in0[85],in0[84]}), .in1({in1[87],in1[86],in1[85],in1[84]}), .r(r[767:704]), .clk(clk), .out0(g11_0), .out1(g11_1));
  wire [3:0] s11_0, s11_1;
  assign s11_0[0] = g11_0[2] ^ g11_0[3];
  assign s11_1[0] = g11_1[2] ^ g11_1[3];
  assign s11_0[1] = g11_0[0] ^ g11_0[2] ^ g11_0[3];
  assign s11_1[1] = g11_1[0] ^ g11_1[2] ^ g11_1[3];
  assign s11_0[2] = g11_0[2] ^ g11_0[1];
  assign s11_1[2] = g11_1[2] ^ g11_1[1];
  assign s11_0[3] = g11_0[3];
  assign s11_1[3] = g11_1[3];

  wire [3:0] g12_0, g12_1;
  GHPC_Gadget_12 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_12_inst(.in0({in0[99],in0[98],in0[97],in0[96]}), .in1({in1[99],in1[98],in1[97],in1[96]}), .r(r[831:768]), .clk(clk), .out0(g12_0), .out1(g12_1));
  wire [3:0] s12_0, s12_1;
  assign s12_0[0] = g12_0[2] ^ g12_0[3];
  assign s12_1[0] = g12_1[2] ^ g12_1[3];
  assign s12_0[1] = g12_0[0] ^ g12_0[2] ^ g12_0[3];
  assign s12_1[1] = g12_1[0] ^ g12_1[2] ^ g12_1[3];
  assign s12_0[2] = g12_0[2] ^ g12_0[1];
  assign s12_1[2] = g12_1[2] ^ g12_1[1];
  assign s12_0[3] = g12_0[3];
  assign s12_1[3] = g12_1[3];

  wire [3:0] g13_0, g13_1;
  GHPC_Gadget_13 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_13_inst(.in0({in0[95],in0[94],in0[93],in0[92]}), .in1({in1[95],in1[94],in1[93],in1[92]}), .r(r[895:832]), .clk(clk), .out0(g13_0), .out1(g13_1));
  wire [3:0] s13_0, s13_1;
  assign s13_0[0] = g13_0[2] ^ g13_0[3];
  assign s13_1[0] = g13_1[2] ^ g13_1[3];
  assign s13_0[1] = g13_0[0] ^ g13_0[2] ^ g13_0[3];
  assign s13_1[1] = g13_1[0] ^ g13_1[2] ^ g13_1[3];
  assign s13_0[2] = g13_0[2] ^ g13_0[1];
  assign s13_1[2] = g13_1[2] ^ g13_1[1];
  assign s13_0[3] = g13_0[3];
  assign s13_1[3] = g13_1[3];

  wire [3:0] g14_0, g14_1;
  GHPC_Gadget_14 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_14_inst(.in0({in0[55],in0[54],in0[53],in0[52]}), .in1({in1[55],in1[54],in1[53],in1[52]}), .r(r[959:896]), .clk(clk), .out0(g14_0), .out1(g14_1));
  wire [3:0] s14_0, s14_1;
  assign s14_0[0] = g14_0[2] ^ g14_0[3];
  assign s14_1[0] = g14_1[2] ^ g14_1[3];
  assign s14_0[1] = g14_0[0] ^ g14_0[2] ^ g14_0[3];
  assign s14_1[1] = g14_1[0] ^ g14_1[2] ^ g14_1[3];
  assign s14_0[2] = g14_0[2] ^ g14_0[1];
  assign s14_1[2] = g14_1[2] ^ g14_1[1];
  assign s14_0[3] = g14_0[3];
  assign s14_1[3] = g14_1[3];

  wire [3:0] g15_0, g15_1;
  GHPC_Gadget_15 #(.in_size('d4), .out_size('d4), .low_latency(low_latency), .pipeline(pipeline)) GHPC_Gadget_15_inst(.in0({in0[91],in0[90],in0[89],in0[88]}), .in1({in1[91],in1[90],in1[89],in1[88]}), .r(r[1023:960]), .clk(clk), .out0(g15_0), .out1(g15_1));
  wire [3:0] s15_0, s15_1;
  assign s15_0[0] = g15_0[2] ^ g15_0[3];
  assign s15_1[0] = g15_1[2] ^ g15_1[3];
  assign s15_0[1] = g15_0[0] ^ g15_0[2] ^ g15_0[3];
  assign s15_1[1] = g15_1[0] ^ g15_1[2] ^ g15_1[3];
  assign s15_0[2] = g15_0[2] ^ g15_0[1];
  assign s15_1[2] = g15_1[2] ^ g15_1[1];
  assign s15_0[3] = g15_0[3];
  assign s15_1[3] = g15_1[3];

  assign out0[29] = 1'b1 ^ in0[17] ^ in0[0] ^ s0_0[0];
  assign out0[25] = 1'b1 ^ in0[13] ^ in0[0] ^ s1_0[0];
  assign out0[21] = 1'b1 ^ in0[9] ^ in0[0] ^ s2_0[0];
  assign out0[28] = 1'b1 ^ in0[16] ^ in0[0] ^ s0_0[1];
  assign out0[24] = 1'b1 ^ in0[12] ^ in0[0] ^ s1_0[1];
  assign out0[20] = 1'b1 ^ in0[8] ^ in0[0] ^ s2_0[1];
  assign out0[61] = 1'b0 ^ in0[17] ^ s0_0[0] ^ s3_0[0];
  assign out0[57] = 1'b0 ^ in0[13] ^ s1_0[0] ^ s4_0[0];
  assign out0[53] = 1'b0 ^ in0[9] ^ s2_0[0] ^ s5_0[0];
  assign out0[45] = 1'b0 ^ in0[29] ^ s3_0[0] ^ s6_0[0];
  assign out0[41] = 1'b0 ^ in0[25] ^ s4_0[0] ^ s7_0[0];
  assign out0[33] = 1'b0 ^ in0[33] ^ s8_0[0] ^ s9_0[0];
  assign out0[31] = 1'b0 ^ in0[19] ^ in0[0] ^ s0_0[2];
  assign out0[27] = 1'b0 ^ in0[15] ^ in0[0] ^ s1_0[2];
  assign out0[23] = 1'b0 ^ in0[11] ^ in0[0] ^ s2_0[2];
  assign out0[17] = 1'b1 ^ in0[2] ^ in0[5] ^ s10_0[0];
  assign out0[13] = 1'b1 ^ in0[17] ^ s0_0[0] ^ s3_0[0] ^ s11_0[0];
  assign out0[9] = 1'b1 ^ in0[13] ^ s1_0[0] ^ s4_0[0] ^ s12_0[0];
  assign out0[5] = 1'b1 ^ in0[9] ^ s2_0[0] ^ s5_0[0] ^ s13_0[0];
  assign out0[60] = 1'b0 ^ in0[16] ^ s0_0[1] ^ s3_0[1];
  assign out0[56] = 1'b0 ^ in0[12] ^ s1_0[1] ^ s4_0[1];
  assign out0[52] = 1'b0 ^ in0[8] ^ s2_0[1] ^ s5_0[1];
  assign out0[44] = 1'b0 ^ in0[28] ^ s3_0[1] ^ s6_0[1];
  assign out0[40] = 1'b0 ^ in0[24] ^ s4_0[1] ^ s7_0[1];
  assign out0[32] = 1'b0 ^ in0[32] ^ s8_0[1] ^ s9_0[1];
  assign out0[30] = 1'b0 ^ in0[18] ^ in0[0] ^ s0_0[3];
  assign out0[26] = 1'b0 ^ in0[14] ^ in0[0] ^ s1_0[3];
  assign out0[22] = 1'b0 ^ in0[10] ^ in0[0] ^ s2_0[3];
  assign out0[16] = 1'b1 ^ in0[1] ^ in0[4] ^ s10_0[1];
  assign out0[12] = 1'b1 ^ in0[16] ^ s0_0[1] ^ s3_0[1] ^ s11_0[1];
  assign out0[8] = 1'b1 ^ in0[12] ^ s1_0[1] ^ s4_0[1] ^ s12_0[1];
  assign out0[4] = 1'b1 ^ in0[8] ^ s2_0[1] ^ s5_0[1] ^ s13_0[1];
  assign out0[63] = 1'b0 ^ in0[19] ^ s0_0[2] ^ s3_0[2];
  assign out0[59] = 1'b0 ^ in0[15] ^ s1_0[2] ^ s4_0[2];
  assign out0[55] = 1'b0 ^ in0[11] ^ s2_0[2] ^ s5_0[2];
  assign out0[49] = 1'b0 ^ in0[2] ^ in0[5] ^ in0[0] ^ s8_0[0] ^ s10_0[0];
  assign out0[47] = 1'b0 ^ in0[31] ^ s3_0[2] ^ s6_0[2];
  assign out0[43] = 1'b0 ^ in0[27] ^ s4_0[2] ^ s7_0[2];
  assign out0[37] = 1'b0 ^ in0[21] ^ s5_0[0] ^ s14_0[0];
  assign out0[35] = 1'b0 ^ in0[35] ^ s8_0[2] ^ s9_0[2];
  assign out0[19] = 1'b0 ^ in0[3] ^ in0[7] ^ s10_0[2];
  assign out0[15] = 1'b0 ^ in0[19] ^ s0_0[2] ^ s3_0[2] ^ s11_0[2];
  assign out0[11] = 1'b0 ^ in0[15] ^ s1_0[2] ^ s4_0[2] ^ s12_0[2];
  assign out0[7] = 1'b0 ^ in0[11] ^ s2_0[2] ^ s5_0[2] ^ s13_0[2];
  assign out0[1] = 1'b1 ^ in0[2] ^ in0[5] ^ in0[0] ^ s8_0[0] ^ s10_0[0] ^ s15_0[0];
  assign out0[62] = 1'b0 ^ in0[18] ^ s0_0[3] ^ s3_0[3];
  assign out0[58] = 1'b1 ^ in0[14] ^ s1_0[3] ^ s4_0[3];
  assign out0[54] = 1'b0 ^ in0[10] ^ s2_0[3] ^ s5_0[3];
  assign out0[48] = 1'b0 ^ in0[1] ^ in0[4] ^ in0[0] ^ s8_0[1] ^ s10_0[1];
  assign out0[46] = 1'b0 ^ in0[30] ^ s3_0[3] ^ s6_0[3];
  assign out0[42] = 1'b1 ^ in0[26] ^ s4_0[3] ^ s7_0[3];
  assign out0[36] = 1'b0 ^ in0[20] ^ s5_0[1] ^ s14_0[1];
  assign out0[34] = 1'b0 ^ in0[34] ^ s8_0[3] ^ s9_0[3];
  assign out0[18] = 1'b0 ^ in0[102] ^ in0[6] ^ s10_0[3];
  assign out0[14] = 1'b0 ^ in0[18] ^ s0_0[3] ^ s3_0[3] ^ s11_0[3];
  assign out0[10] = 1'b1 ^ in0[14] ^ s1_0[3] ^ s4_0[3] ^ s12_0[3];
  assign out0[6] = 1'b0 ^ in0[10] ^ s2_0[3] ^ s5_0[3] ^ s13_0[3];
  assign out0[0] = 1'b1 ^ in0[1] ^ in0[4] ^ in0[0] ^ s8_0[1] ^ s10_0[1] ^ s15_0[1];
  assign out0[51] = 1'b0 ^ in0[3] ^ in0[7] ^ in0[0] ^ s8_0[2] ^ s10_0[2];
  assign out0[39] = 1'b0 ^ in0[101] ^ in0[23] ^ in0[0] ^ s5_0[2] ^ s14_0[2];
  assign out0[3] = 1'b0 ^ in0[3] ^ in0[7] ^ in0[0] ^ s8_0[2] ^ s10_0[2] ^ s15_0[2];
  assign out0[50] = 1'b0 ^ in0[102] ^ in0[6] ^ in0[0] ^ s8_0[3] ^ s10_0[3];
  assign out0[38] = 1'b0 ^ in0[100] ^ in0[22] ^ in0[0] ^ s5_0[3] ^ s14_0[3];
  assign out0[2] = 1'b0 ^ in0[102] ^ in0[6] ^ in0[0] ^ s8_0[3] ^ s10_0[3] ^ s15_0[3];
  assign out1[29] = 1'b0 ^ in1[17] ^ in1[0] ^ s0_1[0];
  assign out1[25] = 1'b0 ^ in1[13] ^ in1[0] ^ s1_1[0];
  assign out1[21] = 1'b0 ^ in1[9] ^ in1[0] ^ s2_1[0];
  assign out1[28] = 1'b0 ^ in1[16] ^ in1[0] ^ s0_1[1];
  assign out1[24] = 1'b0 ^ in1[12] ^ in1[0] ^ s1_1[1];
  assign out1[20] = 1'b0 ^ in1[8] ^ in1[0] ^ s2_1[1];
  assign out1[61] = 1'b0 ^ in1[17] ^ s0_1[0] ^ s3_1[0];
  assign out1[57] = 1'b0 ^ in1[13] ^ s1_1[0] ^ s4_1[0];
  assign out1[53] = 1'b0 ^ in1[9] ^ s2_1[0] ^ s5_1[0];
  assign out1[45] = 1'b0 ^ in1[29] ^ s3_1[0] ^ s6_1[0];
  assign out1[41] = 1'b0 ^ in1[25] ^ s4_1[0] ^ s7_1[0];
  assign out1[33] = 1'b0 ^ in1[33] ^ s8_1[0] ^ s9_1[0];
  assign out1[31] = 1'b0 ^ in1[19] ^ in1[0] ^ s0_1[2];
  assign out1[27] = 1'b0 ^ in1[15] ^ in1[0] ^ s1_1[2];
  assign out1[23] = 1'b0 ^ in1[11] ^ in1[0] ^ s2_1[2];
  assign out1[17] = 1'b0 ^ in1[2] ^ in1[5] ^ s10_1[0];
  assign out1[13] = 1'b0 ^ in1[17] ^ s0_1[0] ^ s3_1[0] ^ s11_1[0];
  assign out1[9] = 1'b0 ^ in1[13] ^ s1_1[0] ^ s4_1[0] ^ s12_1[0];
  assign out1[5] = 1'b0 ^ in1[9] ^ s2_1[0] ^ s5_1[0] ^ s13_1[0];
  assign out1[60] = 1'b0 ^ in1[16] ^ s0_1[1] ^ s3_1[1];
  assign out1[56] = 1'b0 ^ in1[12] ^ s1_1[1] ^ s4_1[1];
  assign out1[52] = 1'b0 ^ in1[8] ^ s2_1[1] ^ s5_1[1];
  assign out1[44] = 1'b0 ^ in1[28] ^ s3_1[1] ^ s6_1[1];
  assign out1[40] = 1'b0 ^ in1[24] ^ s4_1[1] ^ s7_1[1];
  assign out1[32] = 1'b0 ^ in1[32] ^ s8_1[1] ^ s9_1[1];
  assign out1[30] = 1'b0 ^ in1[18] ^ in1[0] ^ s0_1[3];
  assign out1[26] = 1'b0 ^ in1[14] ^ in1[0] ^ s1_1[3];
  assign out1[22] = 1'b0 ^ in1[10] ^ in1[0] ^ s2_1[3];
  assign out1[16] = 1'b0 ^ in1[1] ^ in1[4] ^ s10_1[1];
  assign out1[12] = 1'b0 ^ in1[16] ^ s0_1[1] ^ s3_1[1] ^ s11_1[1];
  assign out1[8] = 1'b0 ^ in1[12] ^ s1_1[1] ^ s4_1[1] ^ s12_1[1];
  assign out1[4] = 1'b0 ^ in1[8] ^ s2_1[1] ^ s5_1[1] ^ s13_1[1];
  assign out1[63] = 1'b0 ^ in1[19] ^ s0_1[2] ^ s3_1[2];
  assign out1[59] = 1'b0 ^ in1[15] ^ s1_1[2] ^ s4_1[2];
  assign out1[55] = 1'b0 ^ in1[11] ^ s2_1[2] ^ s5_1[2];
  assign out1[49] = 1'b0 ^ in1[2] ^ in1[5] ^ in1[0] ^ s8_1[0] ^ s10_1[0];
  assign out1[47] = 1'b0 ^ in1[31] ^ s3_1[2] ^ s6_1[2];
  assign out1[43] = 1'b0 ^ in1[27] ^ s4_1[2] ^ s7_1[2];
  assign out1[37] = 1'b0 ^ in1[21] ^ s5_1[0] ^ s14_1[0];
  assign out1[35] = 1'b0 ^ in1[35] ^ s8_1[2] ^ s9_1[2];
  assign out1[19] = 1'b0 ^ in1[3] ^ in1[7] ^ s10_1[2];
  assign out1[15] = 1'b0 ^ in1[19] ^ s0_1[2] ^ s3_1[2] ^ s11_1[2];
  assign out1[11] = 1'b0 ^ in1[15] ^ s1_1[2] ^ s4_1[2] ^ s12_1[2];
  assign out1[7] = 1'b0 ^ in1[11] ^ s2_1[2] ^ s5_1[2] ^ s13_1[2];
  assign out1[1] = 1'b0 ^ in1[2] ^ in1[5] ^ in1[0] ^ s8_1[0] ^ s10_1[0] ^ s15_1[0];
  assign out1[62] = 1'b0 ^ in1[18] ^ s0_1[3] ^ s3_1[3];
  assign out1[58] = 1'b0 ^ in1[14] ^ s1_1[3] ^ s4_1[3];
  assign out1[54] = 1'b0 ^ in1[10] ^ s2_1[3] ^ s5_1[3];
  assign out1[48] = 1'b0 ^ in1[1] ^ in1[4] ^ in1[0] ^ s8_1[1] ^ s10_1[1];
  assign out1[46] = 1'b0 ^ in1[30] ^ s3_1[3] ^ s6_1[3];
  assign out1[42] = 1'b0 ^ in1[26] ^ s4_1[3] ^ s7_1[3];
  assign out1[36] = 1'b0 ^ in1[20] ^ s5_1[1] ^ s14_1[1];
  assign out1[34] = 1'b0 ^ in1[34] ^ s8_1[3] ^ s9_1[3];
  assign out1[18] = 1'b0 ^ in1[102] ^ in1[6] ^ s10_1[3];
  assign out1[14] = 1'b0 ^ in1[18] ^ s0_1[3] ^ s3_1[3] ^ s11_1[3];
  assign out1[10] = 1'b0 ^ in1[14] ^ s1_1[3] ^ s4_1[3] ^ s12_1[3];
  assign out1[6] = 1'b0 ^ in1[10] ^ s2_1[3] ^ s5_1[3] ^ s13_1[3];
  assign out1[0] = 1'b0 ^ in1[1] ^ in1[4] ^ in1[0] ^ s8_1[1] ^ s10_1[1] ^ s15_1[1];
  assign out1[51] = 1'b0 ^ in1[3] ^ in1[7] ^ in1[0] ^ s8_1[2] ^ s10_1[2];
  assign out1[39] = 1'b0 ^ in1[101] ^ in1[23] ^ in1[0] ^ s5_1[2] ^ s14_1[2];
  assign out1[3] = 1'b0 ^ in1[3] ^ in1[7] ^ in1[0] ^ s8_1[2] ^ s10_1[2] ^ s15_1[2];
  assign out1[50] = 1'b0 ^ in1[102] ^ in1[6] ^ in1[0] ^ s8_1[3] ^ s10_1[3];
  assign out1[38] = 1'b0 ^ in1[100] ^ in1[22] ^ in1[0] ^ s5_1[3] ^ s14_1[3];
  assign out1[2] = 1'b0 ^ in1[102] ^ in1[6] ^ in1[0] ^ s8_1[3] ^ s10_1[3] ^ s15_1[3];
endmodule
